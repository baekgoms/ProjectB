<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="petition">

<!-- ==============================우찬=========================== -->

	<select id="MaxnumCount" resultType="int">
		select max(num)from petition
	</select>
	
	<insert id ="insertArticle" parameterType="petitionDTO">
		insert into petition(
		num,title,content,category,startDate,endDate,writer,link,tag) 
		values(petition_seq.nextval, #{title}, #{content}, #{category}, sysdate, sysdate+(interval '30' day), 
		#{writer},#{link},#{tag})
		
 
		<selectKey resultType="integer" keyProperty="num" order="AFTER">
		    SELECT petition_seq.currval FROM DUAL
		</selectKey>
	</insert>

	<insert id ="insertDiscussion" parameterType="petitionDTO">
		insert into discussion(
		num,write,content,reg,tag,subject,link) 
		values(discussion_seq.nextval, #{write}, #{content}, sysdate, #{tag},#{subject}, #{link})
	</insert>
	 
	<select id ="getCategory" resultType="String">
		select categoryName from category order by num asc
	</select>
	
	<select id="getMyNewPetition" resultType="PetitionDTO" parameterType="int">
		select max(num) from petition where writer = #{writer}
	</select>

	<!-- ==============================보배=========================== -->

	
	<select id ="getArticleCount" resultType="int">
		select count(*) from petition where petitionState= 2
		<if test="keyword != null">
			and title like '%' || #{keyword} || '%' or content like '%' || #{keyword} || '%' or tag like '%' || #{keyword} || '%'
		</if>
	</select>
	
	<select id="getArticleAll" resultType="petitionDTO" parameterType="map">
		select * from (select num, title, content, category, startDate, endDate, writer,
		petition, petitionState, link, indicatorNum, tag, report, open, rownum r 
		from(select * from petition where petitionState= 2
		<if test="keyword != null">
			and title like '%' || #{keyword} || '%' or content like '%' || #{keyword} || '%' or tag like '%' || #{keyword} || '%'
		</if>
		<if test="sort == null">
		order by num desc) order by num desc) 
		</if>
		<if test="sort != null">
		order by petition desc) order by petition desc) 
		</if> 
		where r <![CDATA[>=]]> #{startRow} and r <![CDATA[<=]]>#{endRow}
	</select>
	
	<select id ="getArticleState" resultType="petitionDTO" parameterType="map">
				select * from (select num, title, content, category, startDate, endDate, writer,
		petition, petitionState, link, indicatorNum, tag, report, open,rownum r 
		from(select * from petition where petitionState= #{state} order by num desc) order by num desc) 
		where r <![CDATA[>=]]> #{startRow} and r <![CDATA[<=]]>#{endRow}
	</select>
	
	<select id ="getArticleCategory" resultType="petitionDTO" parameterType="map">
				select * from (select num, title, content, category, startDate, endDate, writer,
		petition, petitionState, link, indicatorNum, tag, report, open,rownum r 
		from(select * from petition where petitionState= 2 and category= #{category} order by num desc) order by num desc) 
		where r <![CDATA[>=]]> #{startRow} and r <![CDATA[<=]]>#{endRow}
	</select>

	<select id ="getArticleCountCategory" resultType="int" parameterType="int">
		select count(*) from petition where petitionState= 2 and category= #{category} 
	</select>

	<select id ="getArticleCountState" resultType="int" parameterType="int">
		select count(*) from petition where petitionState = #{state} 
	</select>
	
	<select id="getCategoryList" resultType="CategoryDTO" >
		select*from category 
	</select>
	
	<select id="forReport" resultType="petitionDTO" parameterType="int">
		select*from petition where num=#{num}
	</select>
	
	<update id="reportCount" parameterType="int">
		update petition set report = report+1 where num=#{num}
	</update>
	
	<select id="reportCountBynum" resultType="int" parameterType="int">
		select report from petition where num=#{num}
	</select>
	
	<update id ="reportCountId" parameterType="String">
		update petitioner set report = report+1 where id=#{id}
	</update>
	
	<!-- 메인!  -->
	
	<select id ="getStateMain" resultType="petitionDTO" parameterType="map">
				select * from (select num, title, content, category, startDate, endDate, writer,
		petition, petitionState, link, indicatorNum, tag, report, open,rownum r 
		from(select * from petition where petitionState= #{state} order by num desc) order by num desc) 
	</select>

	<select id="MainbyEnddate" resultType="petitionDTO">
		select*from petition where petitionState= 2 order by enddate asc
	</select>
	
	<select id="MainbyPetition" resultType="petitionDTO">
		select*from petition where petitionState= 2 order by petition desc
	</select>
	

	<select id="tagCount" resultType="String">
		select tag, count(*) from petition group by tag
	</select>
	
	
	
	<!-- ==============================민희================================ -->
	
	<!-- resultType으로 리턴
		 parameterType DAO에서 가지고 오는 타입 -->
	
	<select id="getArticle" resultType="PetitionDTO" parameterType="int">
		select * from petition where num = #{num}
	</select>
	
	
	<insert id="insertPetCmt" parameterType="PetCommentDTO">
		INSERT INTO 
			petitionComment (num, petitionNum, writer, content, reg) 
		VALUES (PETITIONCOMMENT_SEQ.nextval,#{petitionNum},#{writer},#{content},sysdate)
	</insert>	
	
	
	<select id="petCmtListAll" resultType="PetCommentDTO" parameterType="int">
		select * from petitionComment where petitionNum = #{petitionNum}
	</select>
	
	<select id="petCmtCount" resultType="int" parameterType="int" >
		select count(*) from petitionComment where petitionNum = #{petitionNum}
	</select>
	
	<select id="petCmtList" resultType="petCommentDTO" parameterType="map">
		<![CDATA[
		select * from (select num,writer,content,reg, petitionNum, rownum r from
        (select * from petitionComment where petitionNum = #{petitionNum} order by num desc) order by num desc) 
        where r >= #{start} and r <= #{end}
        ]]>
	</select>
	
	<select id="getPetitionIndicator" resultType="petitionIndicatorDTO" parameterType="int">
        select * from petitionIndicator where num = #{num}
    </select>
	
	<select id="getPetitionPetitionerMap" resultType="petitionPetitionerMapDTO" parameterType="petitionPetitionerMapDTO">
		select * from petitionPetitionerMap where petitionNum = #{petitionNum} and petitionerId = #{petitionerId} 
	</select>
	

	<insert id="insertPetitionPetitionerMap" parameterType="petitionPetitionerMapDTO">
		insert into petitionPetitionerMap 
			(petitionNum, petitionerId)
		values 
			( #{petitionNum}, #{petitionerId} ) 
	</insert>
	
	<update id="agreePetition" parameterType="petitionPetitionerMapDTO">
    	UPDATE petition
   			SET 
   				petition = petition + 1
    		WHERE
    			num = #{petitionNum}
    </update>
	
	
	<!--청원번호에 해당하는 mapping정보를 확인한다 (여기X) -->
	<select id="getPetitionPetitionerByPetitionNum" resultType="petitionPetitionerMapDTO" parameterType="int">
		select * from petitionPetitionerMap where petitionNum = #{petitionNum}
	</select>

	
	
	
	
	
	<update id="updatePetitionCount" parameterType="int">
		update petition set petition = petition + 1 where num = #{num}
	</update>
	
	<select id="getPetitionerById" resultType="petitionerDTO" parameterType="String">
		select * from petitioner where id = #{id}
	</select>
	
	<select id="getCategoryName" resultType="String" parameterType="int">
        select categoryName from category where num = #{num}
    </select>
    
	<select id="getPetitionState" resultType="String" parameterType="int">
        select state from petitionState where num = #{num}
    </select>
    
    <insert id="insertIndicator" parameterType="PetitionDTO">
    	INSERT INTO petitionIndicator
    	(num, MANCOUNT, WOMANCOUNT, TEENS, TWENTIES, THIRTIES, FORTIES, FIFTIES, SIXTIES)
    	VALUES
    	(#{num}, 0,0,0,0,0,0,0,0)
    </insert>
    <update id="updateIndicator" parameterType="HashMap">
		update petitionIndicator 
		<set>
			<choose>
				<when test="gender == true">MANCOUNT = MANCOUNT + 1,</when>
				<otherwise>			WOMANCOUNT = WOMANCOUNT + 1,</otherwise>
			</choose>
			<choose>
				<when test="age &lt; 20">TEENS = TEENS + 1	</when>
				<when test="age &lt; 30">TWENTIES = TWENTIES + 1	</when>
				<when test="age &lt; 40">THIRTIES = THIRTIES + 1	</when>
				<when test="age &lt; 50">FORTIES = FORTIES + 1	</when>
				<when test="age &lt; 60">FIFTIES =FIFTIES  + 1	</when>
				<when test="age &lt; 150">SIXTIES = SIXTIES + 1	</when>
			</choose>
		</set>
		where num = #{ petitionNum }
	</update>
	
    <update id="updatePetitionState" parameterType="HashMap">
		update petition 
		SET
			petitionState = 
				CASE 
					WHEN petition &gt;= 11
						THEN 2
					WHEN sysdate &gt;= endDate and petition &lt; 100
						THEN 3
					WHEN sysdate &gt;= endDate and petition &gt; 100
						THEN 4
					ELSE 1 END
		where num = #{ petitionNum }
	</update>
	
	<delete id="deletePetition" parameterType="int">
		delete from petition where num=#{num} 
	</delete>
	
	<insert id="insertAnswerDTO" parameterType="petitionDTO">
		insert into 
			answer (num,petitionNum,state,category)
			values (answerNum_seq.nextval,#{petitionNum},#{petitionState},#{category}) 
	</insert> 
	
	
	
	
</mapper>

